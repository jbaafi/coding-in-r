out2$month <- (out2$time - 1) %/% 30 + 1
# Map month numbers to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
out2$month_name <- month_names[out2$month]
# Print the modified dataframe
print(out2)
View(out2)
rm(list = ls())
# Load packages
pacman::p_load(pacman, deSolve, tidyverse, dplyr)
# Define a function for the system of equations
pop.model2 <- function(t, y, ...){
# A function for daily temperature (data from Hamilton Ontario)
temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365) # Data from Ain Mahbel, Algeria (North Africa)
# Monthly average rainfall
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
# Oviposition rate as a function of temperature and rainfall based on Abdelrazec and Gumel, 201
phi_Ao <-  0.443111*exp(-((temp - 34.388928)^2)/185.611107) # based on Beck-Johnson et al, 2013 and Lardeux et al, 2008 on Anopheles mosquito
# Egg hatching/development function based on Abdelrazec & Gumel, 2017
tauE <- 1.0074 + 6.1694*(1 + (temp/16.6460)^5.8166)^-1  # Average duration spent in egg stage
mu_E1 <- ifelse(temp <= 15, 0.2415,
ifelse(temp >= 31, 0.2415,
0.0531*exp(((temp - 23)/6.5)^2))) # Egg mortality rate
PE.T <- exp(-mu_E1) #   daily  survival  probability  of immature  mosquitoes  in  egg stage
R_IM <- 100  # This value should be 50mm bigger than the highest value in the data frame. The maximum rainfall threshold in the community
P_ME <- 0.9 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PE.R <- R*(R_IM - R)*(4*P_ME / R_IM^2) # The rainfall-depende nt daily probability of survival of mosquito eggs
PE.TR <- PE.T*PE.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#(PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))
rho_E <- PE.TR/tauE
# Larvae development rate based on Abdelrazec & Gumel
tauL <- 7.1361 + 10.1433*(1 + (temp/21.1947)^9.8122)^-1 # Average duration spent in larvae stage
mu_L1 <- ifelse(temp <= 15, 0.09597,
ifelse(temp >= 31, 0.09597,
0.0211*exp(((temp - 23)/6.5)^2))) # Larvae mortality, Beck-Johnson et al, 2013
PL.T <- exp(-mu_L1) #   daily  survival  probability  of immature  mosquitoes  in  larvae stage
P_ML <- 0.9 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PL.R <- R*(R_IM - R)*(4*P_ML / R_IM^2) # The rainfall-dependent daily probability of survival of mosquito eggs
PL.TR <- PL.T*PL.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#rho_E <- (PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))  # Development rate of larvae to pupae, Okuneye et al.,
rho_L <- PL.TR/tauL # Development rate of larvae to pupae Supplemental material by Parham
# Pupa development rate based on Abdelrazec & Gumel
tauP <- ifelse(temp<=15, 9, 0.9933 + 127.6942*(1 + (temp/5.8999)^2.8134)^-1) # Average duration spent in egg stage
mu_P1 <- ifelse(temp <= 15, 0.2415,
ifelse(temp >= 31, 0.2415,
0.0531*exp(((temp - 23)/6.5)^2)))
PP.T <- exp(-mu_P1) #   daily  survival  probability  of immature  mosquitoes  in  egg stage
P_MP <- 0.90 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PP.R <- R*(R_IM - R)*(4*P_MP / R_IM^2) # The rainfall-dependent daily probability of survival of mosquito eggs
PP.TR <- PP.T*PP.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#rho_E <- (PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))
rho_P <- PP.TR/tauP
# Adult mortality rate
mu_A <- -log(-0.000828*temp^2 + 0.0367*temp + 0.522) # Taken from Mordecai and Okuneye
#mu_A <- 0.0005*(temp - 28)^2 + 0.04 # This is from Abdelrezec & Gumel
# The number of states
E = y[1]
L = y[2]
P = y[3]
Ah = y[4]
Ar = y[5]
Ao = y[6]
# The system of equations (This model is based on Lutambi et al, 2013)
dE <- b*phi_Ao*(1-Ao/K)*Ao - (rho_E + mu_E1 + mu_E2)*E
dL <- rho_E*E - (rho_L + mu_L1 + mu_L2 + delta_L*L)*L
dP <- rho_L*L - (rho_P + mu_P1 + mu_P2)*P
dAh <- rho_P*P + phi_Ao*Ao - (rho_Ah + mu_A + mu_Ah2)*Ah
dAr <- rho_Ah*Ah - (rho_Ar + mu_A +mu_Ar2)*Ar
dAo <- rho_Ar*Ar - (phi_Ao + mu_A + mu_Ao2)*Ao
return(list(c(dE, dL, dP, dAh, dAr, dAo, temp, R)))
}
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
mu_L2 = 0.005 # Natural mortality of larvae
delta_L = 0.01 # For every 100 larvae, 1 larvae will probably die due to competition for resources (Assumed)
mu_P2 = 0.005 # Natural pupal mortality
rho_Ah =  2 # 0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah2 = 0.01
rho_Ar =  1/2 # Takes 2 days for egg to develop and seek oviposition site
mu_Ar2 = 0.005
mu_Ao2 = 0.01
K = 10^7  # From Okuneye et al,
param <- c(b,
mu_E2,
mu_L2,
delta_L,
mu_P2,
rho_Ah,
mu_Ah2,
rho_Ar,
mu_Ar2,
mu_Ao2,
K)
# Initial conditions (I am not sure what values to use as initial conditions but I guess it doesn't matter much)
y.initial <- c(100.0, 100.0, 100.0, 30.0, 30.0, 40.0, 6.4314, 41.0054)
# Time steps (Period with which to run the model)
start <- 1
end <- 365
times <- seq(start, end, by = 1)
# Numerical integration using the ode() function from deSolve package
out2 <-  ode(y = y.initial, func = pop.model2, times = times, parms = param, method = "lsoda") %>%
data.frame()
# Rename variable
out2 <- out2 %>%
rename(eggs = X1, larvae = X2, pupae = X3, host.seeking.adults = X4,
resting.adults = X5, ovipositn.adults = X6, temp=X7, rain=X8)
#Add a column which contains the total number of adults (A = Ah + Ar + Ao) to the data.frame
out2 <- out2 %>%
mutate(total.adults =  out2$host.seeking.adults + out2$resting.adults + out2$ovipositn.adults)
library(lubridate)
# Convert time from days to months
out2$month <- month(ymd("2021-01-01") + days(out2$time - 1))
# Map month numbers to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
out2$month_name <- month_names[out2$month]
# Print the modified dataframe
print(out2)
View(out2)
rm(list = ls())
# Load data
df.gh <- read.csv("/Users/josephbaafi/documents/GitHub/research-project-one/numerical_data/variable.condt_gh.csv")
# Load library
library("dplyr")
#Using rename()
df.gh <- df.gh %>%
rename("total.adult" = "vary.total.adults")
library(lubridate)
# Convert time from days to months
df.gh$month <- month(ymd("2021-01-01") + days(out2$time - 1))
# Convert time from days to months
df.gh$month <- month(ymd("2021-01-01") + days(df.gh$time - 1))
# Map month numbers to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
odf.gh$month_name <- month_names[df.gh$month]
df.gh$month_name <- month_names[df.gh$month]
View(df.gh)
month_sum <- df.gh %>%
group_by(month) %>%
summarize(sum = sum(total.adult), count = n()) %>%
arrange(desc(count))
month_sum <- df.gh %>%
group_by(month) %>%
summarize(sum = sum(total.adult), count = n()) %>%
arrange(desc(count))
View(month_sum)
plot(month_sum$month, month_sum$sum)
plot(month_sum$month, month_sum$sum, "l")
rm(list = ls())
# Load packages
pacman::p_load(pacman, deSolve, tidyverse, dplyr)
# Define a function for the system of equations
pop.model2 <- function(t, y, ...){
# A function for daily temperature (data from Hamilton Ontario)
temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365) # Data from Ain Mahbel, Algeria (North Africa)
# Monthly average rainfall
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
# Oviposition rate as a function of temperature and rainfall based on Abdelrazec and Gumel, 201
phi_Ao <-  0.443111*exp(-((temp - 34.388928)^2)/185.611107) # based on Beck-Johnson et al, 2013 and Lardeux et al, 2008 on Anopheles mosquito
# Egg hatching/development function based on Abdelrazec & Gumel, 2017
tauE <- 1.0074 + 6.1694*(1 + (temp/16.6460)^5.8166)^-1  # Average duration spent in egg stage
mu_E1 <- ifelse(temp <= 15, 0.2415,
ifelse(temp >= 31, 0.2415,
0.0531*exp(((temp - 23)/6.5)^2))) # Egg mortality rate
PE.T <- exp(-mu_E1) #   daily  survival  probability  of immature  mosquitoes  in  egg stage
R_IM <- 100  # This value should be 50mm bigger than the highest value in the data frame. The maximum rainfall threshold in the community
P_ME <- 0.9 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PE.R <- R*(R_IM - R)*(4*P_ME / R_IM^2) # The rainfall-depende nt daily probability of survival of mosquito eggs
PE.TR <- PE.T*PE.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#(PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))
rho_E <- PE.TR/tauE
# Larvae development rate based on Abdelrazec & Gumel
tauL <- 7.1361 + 10.1433*(1 + (temp/21.1947)^9.8122)^-1 # Average duration spent in larvae stage
mu_L1 <- ifelse(temp <= 15, 0.09597,
ifelse(temp >= 31, 0.09597,
0.0211*exp(((temp - 23)/6.5)^2))) # Larvae mortality, Beck-Johnson et al, 2013
PL.T <- exp(-mu_L1) #   daily  survival  probability  of immature  mosquitoes  in  larvae stage
P_ML <- 0.9 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PL.R <- R*(R_IM - R)*(4*P_ML / R_IM^2) # The rainfall-dependent daily probability of survival of mosquito eggs
PL.TR <- PL.T*PL.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#rho_E <- (PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))  # Development rate of larvae to pupae, Okuneye et al.,
rho_L <- PL.TR/tauL # Development rate of larvae to pupae Supplemental material by Parham
# Pupa development rate based on Abdelrazec & Gumel
tauP <- ifelse(temp<=15, 9, 0.9933 + 127.6942*(1 + (temp/5.8999)^2.8134)^-1) # Average duration spent in egg stage
mu_P1 <- ifelse(temp <= 15, 0.2415,
ifelse(temp >= 31, 0.2415,
0.0531*exp(((temp - 23)/6.5)^2)))
PP.T <- exp(-mu_P1) #   daily  survival  probability  of immature  mosquitoes  in  egg stage
P_MP <- 0.90 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PP.R <- R*(R_IM - R)*(4*P_MP / R_IM^2) # The rainfall-dependent daily probability of survival of mosquito eggs
PP.TR <- PP.T*PP.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#rho_E <- (PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))
rho_P <- PP.TR/tauP
# Adult mortality rate
mu_A <- -log(-0.000828*temp^2 + 0.0367*temp + 0.522) # Taken from Mordecai and Okuneye
#mu_A <- 0.0005*(temp - 28)^2 + 0.04 # This is from Abdelrezec & Gumel
# The number of states
E = y[1]
L = y[2]
P = y[3]
Ah = y[4]
Ar = y[5]
Ao = y[6]
# The system of equations (This model is based on Lutambi et al, 2013)
dE <- b*phi_Ao*(1-Ao/K)*Ao - (rho_E + mu_E1 + mu_E2)*E
dL <- rho_E*E - (rho_L + mu_L1 + mu_L2 + delta_L*L)*L
dP <- rho_L*L - (rho_P + mu_P1 + mu_P2)*P
dAh <- rho_P*P + phi_Ao*Ao - (rho_Ah + mu_A + mu_Ah2)*Ah
dAr <- rho_Ah*Ah - (rho_Ar + mu_A +mu_Ar2)*Ar
dAo <- rho_Ar*Ar - (phi_Ao + mu_A + mu_Ao2)*Ao
return(list(c(dE, dL, dP, dAh, dAr, dAo, temp, R)))
}
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
mu_L2 = 0.005 # Natural mortality of larvae
delta_L = 0.01 # For every 100 larvae, 1 larvae will probably die due to competition for resources (Assumed)
mu_P2 = 0.005 # Natural pupal mortality
rho_Ah =  2 # 0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah2 = 0.01
rho_Ar =  1/2 # Takes 2 days for egg to develop and seek oviposition site
mu_Ar2 = 0.005
mu_Ao2 = 0.01
K = 10^7  # From Okuneye et al,
param <- c(b,
mu_E2,
mu_L2,
delta_L,
mu_P2,
rho_Ah,
mu_Ah2,
rho_Ar,
mu_Ar2,
mu_Ao2,
K)
# Initial conditions (I am not sure what values to use as initial conditions but I guess it doesn't matter much)
y.initial <- c(100.0, 100.0, 100.0, 30.0, 30.0, 40.0, 6.4314, 41.0054)
# Time steps (Period with which to run the model)
start <- 1
end <- 365
times <- seq(start, end, by = 1)
# Numerical integration using the ode() function from deSolve package
out2 <-  ode(y = y.initial, func = pop.model2, times = times, parms = param, method = "lsoda") %>%
data.frame()
# Rename variable
out2 <- out2 %>%
rename(eggs = X1, larvae = X2, pupae = X3, host.seeking.adults = X4,
resting.adults = X5, ovipositn.adults = X6, temp=X7, rain=X8)
#Add a column which contains the total number of adults (A = Ah + Ar + Ao) to the data.frame
out2 <- out2 %>%
mutate(total.adults =  out2$host.seeking.adults + out2$resting.adults + out2$ovipositn.adults)
# Load the necessary libraries
library(dplyr)
library(lubridate)
# Assuming 'out2' contains your dataframe with the output data
# Convert time from days to months
out2$month <- month(ymd("2021-01-01") + days(out2$time - 1))
# Map month numbers to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
out2$month_name <- month_names[out2$month]
# Print the modified dataframe
print(out2)
month_sum <- out2 %>%
group_by(month) %>%
summarize(sum = sum(total.adult), count = n()) %>%
arrange(desc(count))
rm(list = ls())
# Load packages
pacman::p_load(pacman, deSolve, tidyverse, dplyr)
# Define a function for the system of equations
pop.model2 <- function(t, y, ...){
# A function for daily temperature (data from Hamilton Ontario)
temp <- 16.93443 - 4.00834*sin(2*pi*t/365) - 10.50303*cos(2*pi*t/365) # Data from Ain Mahbel, Algeria (North Africa)
# Monthly average rainfall
R <- 40.31070*(1 + 0.50363*cos(2*pi*(2.34109*t - 275.73821)/365))
# Oviposition rate as a function of temperature and rainfall based on Abdelrazec and Gumel, 201
phi_Ao <-  0.443111*exp(-((temp - 34.388928)^2)/185.611107) # based on Beck-Johnson et al, 2013 and Lardeux et al, 2008 on Anopheles mosquito
# Egg hatching/development function based on Abdelrazec & Gumel, 2017
tauE <- 1.0074 + 6.1694*(1 + (temp/16.6460)^5.8166)^-1  # Average duration spent in egg stage
mu_E1 <- ifelse(temp <= 15, 0.2415,
ifelse(temp >= 31, 0.2415,
0.0531*exp(((temp - 23)/6.5)^2))) # Egg mortality rate
PE.T <- exp(-mu_E1) #   daily  survival  probability  of immature  mosquitoes  in  egg stage
R_IM <- 100  # This value should be 50mm bigger than the highest value in the data frame. The maximum rainfall threshold in the community
P_ME <- 0.9 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PE.R <- R*(R_IM - R)*(4*P_ME / R_IM^2) # The rainfall-depende nt daily probability of survival of mosquito eggs
PE.TR <- PE.T*PE.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#(PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))
rho_E <- PE.TR/tauE
# Larvae development rate based on Abdelrazec & Gumel
tauL <- 7.1361 + 10.1433*(1 + (temp/21.1947)^9.8122)^-1 # Average duration spent in larvae stage
mu_L1 <- ifelse(temp <= 15, 0.09597,
ifelse(temp >= 31, 0.09597,
0.0211*exp(((temp - 23)/6.5)^2))) # Larvae mortality, Beck-Johnson et al, 2013
PL.T <- exp(-mu_L1) #   daily  survival  probability  of immature  mosquitoes  in  larvae stage
P_ML <- 0.9 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PL.R <- R*(R_IM - R)*(4*P_ML / R_IM^2) # The rainfall-dependent daily probability of survival of mosquito eggs
PL.TR <- PL.T*PL.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#rho_E <- (PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))  # Development rate of larvae to pupae, Okuneye et al.,
rho_L <- PL.TR/tauL # Development rate of larvae to pupae Supplemental material by Parham
# Pupa development rate based on Abdelrazec & Gumel
tauP <- ifelse(temp<=15, 9, 0.9933 + 127.6942*(1 + (temp/5.8999)^2.8134)^-1) # Average duration spent in egg stage
mu_P1 <- ifelse(temp <= 15, 0.2415,
ifelse(temp >= 31, 0.2415,
0.0531*exp(((temp - 23)/6.5)^2)))
PP.T <- exp(-mu_P1) #   daily  survival  probability  of immature  mosquitoes  in  egg stage
P_MP <- 0.90 # Peak  daily  survival  probability  of  immature  mosquito  egg stage
PP.R <- R*(R_IM - R)*(4*P_MP / R_IM^2) # The rainfall-dependent daily probability of survival of mosquito eggs
PP.TR <- PP.T*PP.R #  The  daily  survival  probability  of immature mosquitoes  in egg stage
#rho_E <- (PE.TR^tauE)*(1 - PE.TR)/(1 - (PE.TR^tauE))
rho_P <- PP.TR/tauP
# Adult mortality rate
mu_A <- -log(-0.000828*temp^2 + 0.0367*temp + 0.522) # Taken from Mordecai and Okuneye
#mu_A <- 0.0005*(temp - 28)^2 + 0.04 # This is from Abdelrezec & Gumel
# The number of states
E = y[1]
L = y[2]
P = y[3]
Ah = y[4]
Ar = y[5]
Ao = y[6]
# The system of equations (This model is based on Lutambi et al, 2013)
dE <- b*phi_Ao*(1-Ao/K)*Ao - (rho_E + mu_E1 + mu_E2)*E
dL <- rho_E*E - (rho_L + mu_L1 + mu_L2 + delta_L*L)*L
dP <- rho_L*L - (rho_P + mu_P1 + mu_P2)*P
dAh <- rho_P*P + phi_Ao*Ao - (rho_Ah + mu_A + mu_Ah2)*Ah
dAr <- rho_Ah*Ah - (rho_Ar + mu_A +mu_Ar2)*Ar
dAo <- rho_Ar*Ar - (phi_Ao + mu_A + mu_Ao2)*Ao
return(list(c(dE, dL, dP, dAh, dAr, dAo, temp, R)))
}
# Model parameters (All parameter values are based on Lutambi et al, 2013) and adapted to Anopheles species
b  = 200      # number of eggs laid per oviposition (range  100 - 400 eggs at a time) https://www.canada.ca/en/health-canada/services/pest-control-tips/mosquitoes.html
mu_E2 = 0.005    # extra natural mortality of eggs that is not dependent on environmental conditions
mu_L2 = 0.005 # Natural mortality of larvae
delta_L = 0.01 # For every 100 larvae, 1 larvae will probably die due to competition for resources (Assumed)
mu_P2 = 0.005 # Natural pupal mortality
rho_Ah =  2 # 0.46 # 2 (According to Cailly et al, 2012, this parameter takes the value of 2 day^-1)
mu_Ah2 = 0.01
rho_Ar =  1/2 # Takes 2 days for egg to develop and seek oviposition site
mu_Ar2 = 0.005
mu_Ao2 = 0.01
K = 10^7  # From Okuneye et al,
param <- c(b,
mu_E2,
mu_L2,
delta_L,
mu_P2,
rho_Ah,
mu_Ah2,
rho_Ar,
mu_Ar2,
mu_Ao2,
K)
# Initial conditions (I am not sure what values to use as initial conditions but I guess it doesn't matter much)
y.initial <- c(100.0, 100.0, 100.0, 30.0, 30.0, 40.0, 6.4314, 41.0054)
# Time steps (Period with which to run the model)
start <- 1
end <- 365
times <- seq(start, end, by = 1)
# Numerical integration using the ode() function from deSolve package
out2 <-  ode(y = y.initial, func = pop.model2, times = times, parms = param, method = "lsoda") %>%
data.frame()
# Rename variable
out2 <- out2 %>%
rename(eggs = X1, larvae = X2, pupae = X3, host.seeking.adults = X4,
resting.adults = X5, ovipositn.adults = X6, temp=X7, rain=X8)
#Add a column which contains the total number of adults (A = Ah + Ar + Ao) to the data.frame
out2 <- out2 %>%
mutate(total.adult =  out2$host.seeking.adults + out2$resting.adults + out2$ovipositn.adults)
# Load the necessary libraries
library(dplyr)
library(lubridate)
# Assuming 'out2' contains your dataframe with the output data
# Convert time from days to months
out2$month <- month(ymd("2021-01-01") + days(out2$time - 1))
# Map month numbers to month names
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
out2$month_name <- month_names[out2$month]
# Print the modified dataframe
print(out2)
month_sum <- out2 %>%
group_by(month) %>%
summarize(sum = sum(total.adult), count = n()) %>%
arrange(desc(count))
View(month_sum)
View(month_sum)
# Create the bar plot
ggplot(data = month_sum, aes(x = reorder(month_name, -sum), y = sum)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
month_sum <- out2 %>%
group_by(month) %>%
summarize(sum = sum(total.adult), count = n()) %>%
arrange(desc(count))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month_name = factor(month_name, levels = month_name[order(-sum)]))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the bar plot
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the plot with lines for the tops of the bars
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_segment(aes(xend = month, yend = 0), color = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the plot with lines connecting points
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_point(color = "steelblue", size = 3) +
geom_line(color = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the plot with lines connecting points
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_point(position = position_nudge(x = 0.2), color = "steelblue", size = 3) +
geom_line(color = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the bar plot
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the plot with step-wise function
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_point(color = "steelblue", size = 3) +
geom_step(color = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create the plot with step-wise function
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_step(color = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create the plot with step-wise function
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_point(color = "steelblue", size = 3) +
geom_step(color = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create the step-wise function plot
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_step(color = "steelblue", size = 1) +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create the step-wise function plot
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_step(color = "steelblue", linewidth = 1) +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Create the step-wise function plot
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_point(color = "steelblue", size = 3) +
geom_step(color = "steelblue", size = 1) +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the step-wise line graph
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_step(color = "steelblue", size = 1) +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Reorder month based on the sum in descending order
month_sum <- month_sum %>%
mutate(month = factor(month, levels = month[order(-sum)]))
# Create the bar plot
ggplot(data = month_sum, aes(x = month, y = sum)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Month", y = "Total Adults", title = "Total Adults by Month") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(month_sum)
